/*
* generated by Xtext
*/
parser grammar InternalWreslEditorParser;

options {
	tokenVocab=InternalWreslEditorLexer;
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	
}

@header {
package gov.ca.dwr.wresl.xtext.editor.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import gov.ca.dwr.wresl.xtext.editor.services.WreslEditorGrammarAccess;

}

@members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 

	private WreslEditorGrammarAccess grammarAccess;
	 	
	public InternalWreslEditorParser(TokenStream input, WreslEditorGrammarAccess grammarAccess) {
		this(input);
		this.grammarAccess = grammarAccess;
		registerRules(grammarAccess.getGrammar());
	}
	
	@Override
	protected String getFirstRuleName() {
		return "WreslEvaluator";	
	} 
	   	   	
	@Override
	protected WreslEditorGrammarAccess getGrammarAccess() {
		return grammarAccess;
	}
}

@rulecatch { 
	catch (RecognitionException re) { 
	    recover(input,re); 
	    appendSkippedTokens();
	}
}




// Entry rule entryRuleWreslEvaluator
entryRuleWreslEvaluator returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getWreslEvaluatorRule()); }
	 iv_ruleWreslEvaluator=ruleWreslEvaluator 
	 { $current=$iv_ruleWreslEvaluator.current; } 
	 EOF 
;

// Rule WreslEvaluator
ruleWreslEvaluator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		{ 
	        newCompositeNode(grammarAccess.getWreslEvaluatorAccess().getPatternAliasParserRuleCall_0_0_0()); 
	    }
		lv_pattern_0_1=ruleAlias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWreslEvaluatorRule());
	        }
       		add(
       			$current, 
       			"pattern",
        		lv_pattern_0_1, 
        		"Alias");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getWreslEvaluatorAccess().getPatternPatternParserRuleCall_0_0_1()); 
	    }
		lv_pattern_0_2=rulePattern		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWreslEvaluatorRule());
	        }
       		add(
       			$current, 
       			"pattern",
        		lv_pattern_0_2, 
        		"Pattern");
	        afterParserOrEnumRuleCall();
	    }

)

)
)+
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getWreslEvaluatorAccess().getInitialInitialParserRuleCall_1_0_0()); 
	    }
		lv_initial_1_0=ruleInitial		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWreslEvaluatorRule());
	        }
       		set(
       			$current, 
       			"initial",
        		true, 
        		"Initial");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getWreslEvaluatorAccess().getSequenceSequenceParserRuleCall_1_1_0()); 
	    }
		lv_sequence_2_0=ruleSequence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWreslEvaluatorRule());
	        }
       		add(
       			$current, 
       			"sequence",
        		lv_sequence_2_0, 
        		"Sequence");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getWreslEvaluatorAccess().getModelModelParserRuleCall_1_2_0()); 
	    }
		lv_model_3_0=ruleModel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWreslEvaluatorRule());
	        }
       		add(
       			$current, 
       			"model",
        		lv_model_3_0, 
        		"Model");
	        afterParserOrEnumRuleCall();
	    }

)
)+))
;





// Entry rule entryRulePattern
entryRulePattern returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getPatternRule()); }
	 iv_rulePattern=rulePattern 
	 { $current=$iv_rulePattern.current; } 
	 EOF 
;

// Rule Pattern
rulePattern returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPatternAccess().getDefineParserRuleCall_0()); 
    }
    this_Define_0=ruleDefine
    {
        $current = $this_Define_0.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPatternAccess().getIncludeFileParserRuleCall_1()); 
    }
    this_IncludeFile_1=ruleIncludeFile
    {
        $current = $this_IncludeFile_1.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPatternAccess().getIncludeModelParserRuleCall_2()); 
    }
ruleIncludeModel
    {
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPatternAccess().getGoalParserRuleCall_3()); 
    }
    this_Goal_3=ruleGoal
    {
        $current = $this_Goal_3.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPatternAccess().getObjectiveParserRuleCall_4()); 
    }
    this_Objective_4=ruleObjective
    {
        $current = $this_Objective_4.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleObjective
entryRuleObjective returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getObjectiveRule()); }
	 iv_ruleObjective=ruleObjective 
	 { $current=$iv_ruleObjective.current; } 
	 EOF 
;

// Rule Objective
ruleObjective returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_51
    {
    	newLeafNode(otherlv_0, grammarAccess.getObjectiveAccess().getObjectiveKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_51
    {
    	newLeafNode(otherlv_1, grammarAccess.getObjectiveAccess().getOBJECTIVEKeyword_0_1());
    }
)(
	otherlv_2=KEYWORD_11
    {
    	newLeafNode(otherlv_2, grammarAccess.getObjectiveAccess().getLeftSquareBracketKeyword_1_0());
    }
(
(
(
		lv_local_3_1=
	KEYWORD_33
    {
        newLeafNode(lv_local_3_1, grammarAccess.getObjectiveAccess().getLocalLocalKeyword_1_1_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectiveRule());
	        }
       		setWithLastConsumed($current, "local", true, null);
	    }

    |		lv_local_3_2=
	KEYWORD_33
    {
        newLeafNode(lv_local_3_2, grammarAccess.getObjectiveAccess().getLocalLOCALKeyword_1_1_0_1());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectiveRule());
	        }
       		setWithLastConsumed($current, "local", true, null);
	    }

)

)
)
	otherlv_4=KEYWORD_12
    {
    	newLeafNode(otherlv_4, grammarAccess.getObjectiveAccess().getRightSquareBracketKeyword_1_2());
    }
)?(
(
		lv_name_5_0=RULE_ID
		{
			newLeafNode(lv_name_5_0, grammarAccess.getObjectiveAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getObjectiveRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"ID");
	    }

)
)
	otherlv_6=KEYWORD_9
    {
    	newLeafNode(otherlv_6, grammarAccess.getObjectiveAccess().getEqualsSignKeyword_3());
    }

	otherlv_7=KEYWORD_13
    {
    	newLeafNode(otherlv_7, grammarAccess.getObjectiveAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getObjectiveAccess().getWeightsWeightItemParserRuleCall_5_0()); 
	    }
		lv_weights_8_0=ruleWeightItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getObjectiveRule());
	        }
       		add(
       			$current, 
       			"weights",
        		lv_weights_8_0, 
        		"WeightItem");
	        afterParserOrEnumRuleCall();
	    }

)
)+
	otherlv_9=KEYWORD_14
    {
    	newLeafNode(otherlv_9, grammarAccess.getObjectiveAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleWeightItem
entryRuleWeightItem returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getWeightItemRule()); }
	 iv_ruleWeightItem=ruleWeightItem 
	 { $current=$iv_ruleWeightItem.current; } 
	 EOF 
;

// Rule WeightItem
ruleWeightItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_11
    {
    	newLeafNode(otherlv_0, grammarAccess.getWeightItemAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getWeightItemAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWeightItemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)
	otherlv_2=KEYWORD_5
    {
    	newLeafNode(otherlv_2, grammarAccess.getWeightItemAccess().getCommaKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWeightItemAccess().getExpressionExpressionParserRuleCall_3_0()); 
	    }
		lv_expression_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWeightItemRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_4=KEYWORD_12
    {
    	newLeafNode(otherlv_4, grammarAccess.getWeightItemAccess().getRightSquareBracketKeyword_4());
    }
(
	otherlv_5=KEYWORD_5
    {
    	newLeafNode(otherlv_5, grammarAccess.getWeightItemAccess().getCommaKeyword_5());
    }
)?)
;





// Entry rule entryRuleDefine
entryRuleDefine returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getDefineRule()); }
	 iv_ruleDefine=ruleDefine 
	 { $current=$iv_ruleDefine.current; } 
	 EOF 
;

// Rule Define
ruleDefine returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_40
    {
    	newLeafNode(otherlv_0, grammarAccess.getDefineAccess().getDefineKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_40
    {
    	newLeafNode(otherlv_1, grammarAccess.getDefineAccess().getDEFINEKeyword_0_1());
    }
)(
	otherlv_2=KEYWORD_11
    {
    	newLeafNode(otherlv_2, grammarAccess.getDefineAccess().getLeftSquareBracketKeyword_1_0());
    }
(
(
(
		lv_local_3_1=
	KEYWORD_33
    {
        newLeafNode(lv_local_3_1, grammarAccess.getDefineAccess().getLocalLocalKeyword_1_1_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefineRule());
	        }
       		setWithLastConsumed($current, "local", true, null);
	    }

    |		lv_local_3_2=
	KEYWORD_33
    {
        newLeafNode(lv_local_3_2, grammarAccess.getDefineAccess().getLocalLOCALKeyword_1_1_0_1());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefineRule());
	        }
       		setWithLastConsumed($current, "local", true, null);
	    }

)

)
)
	otherlv_4=KEYWORD_12
    {
    	newLeafNode(otherlv_4, grammarAccess.getDefineAccess().getRightSquareBracketKeyword_1_2());
    }
)?(
(
		lv_name_5_0=RULE_ID
		{
			newLeafNode(lv_name_5_0, grammarAccess.getDefineAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefineRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"ID");
	    }

)
)
	otherlv_6=KEYWORD_13
    {
    	newLeafNode(otherlv_6, grammarAccess.getDefineAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getDefineAccess().getDefinitionDVarParserRuleCall_4_0_0()); 
	    }
		lv_definition_7_1=ruleDVar		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefineRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_7_1, 
        		"DVar");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getDefineAccess().getDefinitionSVarParserRuleCall_4_0_1()); 
	    }
		lv_definition_7_2=ruleSVar		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefineRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_7_2, 
        		"SVar");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getDefineAccess().getDefinitionDVarIntegerParserRuleCall_4_0_2()); 
	    }
		lv_definition_7_3=ruleDVarInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefineRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_7_3, 
        		"DVarInteger");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getDefineAccess().getDefinitionExternalParserRuleCall_4_0_3()); 
	    }
		lv_definition_7_4=ruleExternal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDefineRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_7_4, 
        		"External");
	        afterParserOrEnumRuleCall();
	    }

)

)
)
	otherlv_8=KEYWORD_14
    {
    	newLeafNode(otherlv_8, grammarAccess.getDefineAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleExternal
entryRuleExternal returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getExternalRule()); }
	 iv_ruleExternal=ruleExternal 
	 { $current=$iv_ruleExternal.current; } 
	 EOF 
;

// Rule External
ruleExternal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_47
    {
    	newLeafNode(otherlv_0, grammarAccess.getExternalAccess().getExternalKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_47
    {
    	newLeafNode(otherlv_1, grammarAccess.getExternalAccess().getEXTERNALKeyword_0_1());
    }
)(((
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getExternalAccess().getNameIDTerminalRuleCall_1_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExternalRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(
	otherlv_3=KEYWORD_26
    {
    	newLeafNode(otherlv_3, grammarAccess.getExternalAccess().getDllKeyword_1_0_1_0());
    }

    |
	otherlv_4=KEYWORD_26
    {
    	newLeafNode(otherlv_4, grammarAccess.getExternalAccess().getDLLKeyword_1_0_1_1());
    }
))
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getExternalAccess().getExternalAction_1_1_0(),
            $current);
    }
)(
	otherlv_6=KEYWORD_20
    {
    	newLeafNode(otherlv_6, grammarAccess.getExternalAccess().getF90Keyword_1_1_1_0());
    }

    |
	otherlv_7=KEYWORD_20
    {
    	newLeafNode(otherlv_7, grammarAccess.getExternalAccess().getF90Keyword_1_1_1_1());
    }
))))
;





// Entry rule entryRuleAlias
entryRuleAlias returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getAliasRule()); }
	 iv_ruleAlias=ruleAlias 
	 { $current=$iv_ruleAlias.current; } 
	 EOF 
;

// Rule Alias
ruleAlias returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_40
    {
    	newLeafNode(otherlv_0, grammarAccess.getAliasAccess().getDefineKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_40
    {
    	newLeafNode(otherlv_1, grammarAccess.getAliasAccess().getDEFINEKeyword_0_1());
    }
)(
	otherlv_2=KEYWORD_11
    {
    	newLeafNode(otherlv_2, grammarAccess.getAliasAccess().getLeftSquareBracketKeyword_1_0());
    }
(
(
(
		lv_local_3_1=
	KEYWORD_33
    {
        newLeafNode(lv_local_3_1, grammarAccess.getAliasAccess().getLocalLocalKeyword_1_1_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAliasRule());
	        }
       		setWithLastConsumed($current, "local", true, null);
	    }

    |		lv_local_3_2=
	KEYWORD_33
    {
        newLeafNode(lv_local_3_2, grammarAccess.getAliasAccess().getLocalLOCALKeyword_1_1_0_1());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAliasRule());
	        }
       		setWithLastConsumed($current, "local", true, null);
	    }

)

)
)
	otherlv_4=KEYWORD_12
    {
    	newLeafNode(otherlv_4, grammarAccess.getAliasAccess().getRightSquareBracketKeyword_1_2());
    }
)?(
(
		lv_name_5_0=RULE_ID
		{
			newLeafNode(lv_name_5_0, grammarAccess.getAliasAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAliasRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"ID");
	    }

)
)
	otherlv_6=KEYWORD_13
    {
    	newLeafNode(otherlv_6, grammarAccess.getAliasAccess().getLeftCurlyBracketKeyword_3());
    }
(
	otherlv_7=KEYWORD_31
    {
    	newLeafNode(otherlv_7, grammarAccess.getAliasAccess().getAliasKeyword_4_0());
    }

    |
	otherlv_8=KEYWORD_31
    {
    	newLeafNode(otherlv_8, grammarAccess.getAliasAccess().getALIASKeyword_4_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAliasAccess().getExpressionExpressionParserRuleCall_5_0()); 
	    }
		lv_expression_9_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAliasRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_9_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)((
	otherlv_10=KEYWORD_30
    {
    	newLeafNode(otherlv_10, grammarAccess.getAliasAccess().getKindKeyword_6_0_0());
    }

    |
	otherlv_11=KEYWORD_30
    {
    	newLeafNode(otherlv_11, grammarAccess.getAliasAccess().getKINDKeyword_6_0_1());
    }
)(
(
		lv_kind_12_0=RULE_STRING
		{
			newLeafNode(lv_kind_12_0, grammarAccess.getAliasAccess().getKindSTRINGTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAliasRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"kind",
        		lv_kind_12_0, 
        		"STRING");
	    }

)
))?((
	otherlv_13=KEYWORD_36
    {
    	newLeafNode(otherlv_13, grammarAccess.getAliasAccess().getUnitsKeyword_7_0_0());
    }

    |
	otherlv_14=KEYWORD_36
    {
    	newLeafNode(otherlv_14, grammarAccess.getAliasAccess().getUNITSKeyword_7_0_1());
    }
)(
(
		lv_units_15_0=RULE_STRING
		{
			newLeafNode(lv_units_15_0, grammarAccess.getAliasAccess().getUnitsSTRINGTerminalRuleCall_7_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAliasRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"units",
        		lv_units_15_0, 
        		"STRING");
	    }

)
))?
	otherlv_16=KEYWORD_14
    {
    	newLeafNode(otherlv_16, grammarAccess.getAliasAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleDVar
entryRuleDVar returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getDVarRule()); }
	 iv_ruleDVar=ruleDVar 
	 { $current=$iv_ruleDVar.current; } 
	 EOF 
;

// Rule DVar
ruleDVar returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDVarAccess().getDVarStdParserRuleCall_0()); 
    }
    this_DVarStd_0=ruleDVarStd
    {
        $current = $this_DVarStd_0.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDVarAccess().getDVarNonStdParserRuleCall_1()); 
    }
    this_DVarNonStd_1=ruleDVarNonStd
    {
        $current = $this_DVarNonStd_1.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDVarNonStd
entryRuleDVarNonStd returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getDVarNonStdRule()); }
	 iv_ruleDVarNonStd=ruleDVarNonStd 
	 { $current=$iv_ruleDVarNonStd.current; } 
	 EOF 
;

// Rule DVarNonStd
ruleDVarNonStd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDVarNonStdAccess().getLowerUpperLowerAndOrUpperParserRuleCall_0_0()); 
	    }
		lv_lowerUpper_0_0=ruleLowerAndOrUpper		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDVarNonStdRule());
	        }
       		set(
       			$current, 
       			"lowerUpper",
        		lv_lowerUpper_0_0, 
        		"LowerAndOrUpper");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_1=KEYWORD_30
    {
    	newLeafNode(otherlv_1, grammarAccess.getDVarNonStdAccess().getKindKeyword_1_0());
    }

    |
	otherlv_2=KEYWORD_30
    {
    	newLeafNode(otherlv_2, grammarAccess.getDVarNonStdAccess().getKINDKeyword_1_1());
    }
)(
(
		lv_kind_3_0=RULE_STRING
		{
			newLeafNode(lv_kind_3_0, grammarAccess.getDVarNonStdAccess().getKindSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDVarNonStdRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"kind",
        		lv_kind_3_0, 
        		"STRING");
	    }

)
)(
	otherlv_4=KEYWORD_36
    {
    	newLeafNode(otherlv_4, grammarAccess.getDVarNonStdAccess().getUnitsKeyword_3_0());
    }

    |
	otherlv_5=KEYWORD_36
    {
    	newLeafNode(otherlv_5, grammarAccess.getDVarNonStdAccess().getUNITSKeyword_3_1());
    }
)(
(
		lv_units_6_0=RULE_STRING
		{
			newLeafNode(lv_units_6_0, grammarAccess.getDVarNonStdAccess().getUnitsSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDVarNonStdRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"units",
        		lv_units_6_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleDVarStd
entryRuleDVarStd returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getDVarStdRule()); }
	 iv_ruleDVarStd=ruleDVarStd 
	 { $current=$iv_ruleDVarStd.current; } 
	 EOF 
;

// Rule DVarStd
ruleDVarStd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_23
    {
    	newLeafNode(otherlv_0, grammarAccess.getDVarStdAccess().getStdKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_23
    {
    	newLeafNode(otherlv_1, grammarAccess.getDVarStdAccess().getSTDKeyword_0_1());
    }
)(
	otherlv_2=KEYWORD_30
    {
    	newLeafNode(otherlv_2, grammarAccess.getDVarStdAccess().getKindKeyword_1_0());
    }

    |
	otherlv_3=KEYWORD_30
    {
    	newLeafNode(otherlv_3, grammarAccess.getDVarStdAccess().getKINDKeyword_1_1());
    }
)(
(
		lv_kind_4_0=RULE_STRING
		{
			newLeafNode(lv_kind_4_0, grammarAccess.getDVarStdAccess().getKindSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDVarStdRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"kind",
        		lv_kind_4_0, 
        		"STRING");
	    }

)
)(
	otherlv_5=KEYWORD_36
    {
    	newLeafNode(otherlv_5, grammarAccess.getDVarStdAccess().getUnitsKeyword_3_0());
    }

    |
	otherlv_6=KEYWORD_36
    {
    	newLeafNode(otherlv_6, grammarAccess.getDVarStdAccess().getUNITSKeyword_3_1());
    }
)(
(
		lv_units_7_0=RULE_STRING
		{
			newLeafNode(lv_units_7_0, grammarAccess.getDVarStdAccess().getUnitsSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDVarStdRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"units",
        		lv_units_7_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleDVarInteger
entryRuleDVarInteger returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getDVarIntegerRule()); }
	 iv_ruleDVarInteger=ruleDVarInteger 
	 { $current=$iv_ruleDVarInteger.current; } 
	 EOF 
;

// Rule DVarInteger
ruleDVarInteger returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDVarIntegerAccess().getDVarIntegerStdParserRuleCall_0()); 
    }
    this_DVarIntegerStd_0=ruleDVarIntegerStd
    {
        $current = $this_DVarIntegerStd_0.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDVarIntegerAccess().getDVarIntegerNonStdParserRuleCall_1()); 
    }
    this_DVarIntegerNonStd_1=ruleDVarIntegerNonStd
    {
        $current = $this_DVarIntegerNonStd_1.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDVarIntegerStd
entryRuleDVarIntegerStd returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getDVarIntegerStdRule()); }
	 iv_ruleDVarIntegerStd=ruleDVarIntegerStd 
	 { $current=$iv_ruleDVarIntegerStd.current; } 
	 EOF 
;

// Rule DVarIntegerStd
ruleDVarIntegerStd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_45
    {
    	newLeafNode(otherlv_0, grammarAccess.getDVarIntegerStdAccess().getIntegerKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_45
    {
    	newLeafNode(otherlv_1, grammarAccess.getDVarIntegerStdAccess().getINTEGERKeyword_0_1());
    }
)(
	otherlv_2=KEYWORD_23
    {
    	newLeafNode(otherlv_2, grammarAccess.getDVarIntegerStdAccess().getStdKeyword_1_0());
    }

    |
	otherlv_3=KEYWORD_23
    {
    	newLeafNode(otherlv_3, grammarAccess.getDVarIntegerStdAccess().getSTDKeyword_1_1());
    }
)(
	otherlv_4=KEYWORD_30
    {
    	newLeafNode(otherlv_4, grammarAccess.getDVarIntegerStdAccess().getKindKeyword_2_0());
    }

    |
	otherlv_5=KEYWORD_30
    {
    	newLeafNode(otherlv_5, grammarAccess.getDVarIntegerStdAccess().getKINDKeyword_2_1());
    }
)(
(
		lv_kind_6_0=RULE_STRING
		{
			newLeafNode(lv_kind_6_0, grammarAccess.getDVarIntegerStdAccess().getKindSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDVarIntegerStdRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"kind",
        		lv_kind_6_0, 
        		"STRING");
	    }

)
)(
	otherlv_7=KEYWORD_36
    {
    	newLeafNode(otherlv_7, grammarAccess.getDVarIntegerStdAccess().getUnitsKeyword_4_0());
    }

    |
	otherlv_8=KEYWORD_36
    {
    	newLeafNode(otherlv_8, grammarAccess.getDVarIntegerStdAccess().getUNITSKeyword_4_1());
    }
)(
(
		lv_units_9_0=RULE_STRING
		{
			newLeafNode(lv_units_9_0, grammarAccess.getDVarIntegerStdAccess().getUnitsSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDVarIntegerStdRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"units",
        		lv_units_9_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleDVarIntegerNonStd
entryRuleDVarIntegerNonStd returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getDVarIntegerNonStdRule()); }
	 iv_ruleDVarIntegerNonStd=ruleDVarIntegerNonStd 
	 { $current=$iv_ruleDVarIntegerNonStd.current; } 
	 EOF 
;

// Rule DVarIntegerNonStd
ruleDVarIntegerNonStd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_45
    {
    	newLeafNode(otherlv_0, grammarAccess.getDVarIntegerNonStdAccess().getIntegerKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_45
    {
    	newLeafNode(otherlv_1, grammarAccess.getDVarIntegerNonStdAccess().getINTEGERKeyword_0_1());
    }
)
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDVarIntegerNonStdAccess().getLowerAndOrUpperParserRuleCall_1()); 
    }
    this_LowerAndOrUpper_2=ruleLowerAndOrUpper
    {
        $current = $this_LowerAndOrUpper_2.current;
        afterParserOrEnumRuleCall();
    }
(
	otherlv_3=KEYWORD_30
    {
    	newLeafNode(otherlv_3, grammarAccess.getDVarIntegerNonStdAccess().getKindKeyword_2_0());
    }

    |
	otherlv_4=KEYWORD_30
    {
    	newLeafNode(otherlv_4, grammarAccess.getDVarIntegerNonStdAccess().getKINDKeyword_2_1());
    }
)(
(
		lv_kind_5_0=RULE_STRING
		{
			newLeafNode(lv_kind_5_0, grammarAccess.getDVarIntegerNonStdAccess().getKindSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDVarIntegerNonStdRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"kind",
        		lv_kind_5_0, 
        		"STRING");
	    }

)
)(
	otherlv_6=KEYWORD_36
    {
    	newLeafNode(otherlv_6, grammarAccess.getDVarIntegerNonStdAccess().getUnitsKeyword_4_0());
    }

    |
	otherlv_7=KEYWORD_36
    {
    	newLeafNode(otherlv_7, grammarAccess.getDVarIntegerNonStdAccess().getUNITSKeyword_4_1());
    }
)(
(
		lv_units_8_0=RULE_STRING
		{
			newLeafNode(lv_units_8_0, grammarAccess.getDVarIntegerNonStdAccess().getUnitsSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDVarIntegerNonStdRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"units",
        		lv_units_8_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleSVar
entryRuleSVar returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSVarRule()); }
	 iv_ruleSVar=ruleSVar 
	 { $current=$iv_ruleSVar.current; } 
	 EOF 
;

// Rule SVar
ruleSVar returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSVarAccess().getSVarDSSParserRuleCall_0()); 
    }
    this_SVarDSS_0=ruleSVarDSS
    {
        $current = $this_SVarDSS_0.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSVarAccess().getSVarExpressionParserRuleCall_1()); 
    }
    this_SVarExpression_1=ruleSVarExpression
    {
        $current = $this_SVarExpression_1.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSVarAccess().getSVarSumParserRuleCall_2()); 
    }
    this_SVarSum_2=ruleSVarSum
    {
        $current = $this_SVarSum_2.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSVarAccess().getSVarTableParserRuleCall_3()); 
    }
    this_SVarTable_3=ruleSVarTable
    {
        $current = $this_SVarTable_3.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSVarAccess().getSVarCaseParserRuleCall_4()); 
    }
    this_SVarCase_4=ruleSVarCase
    {
        $current = $this_SVarCase_4.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSVarDSS
entryRuleSVarDSS returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSVarDSSRule()); }
	 iv_ruleSVarDSS=ruleSVarDSS 
	 { $current=$iv_ruleSVarDSS.current; } 
	 EOF 
;

// Rule SVarDSS
ruleSVarDSS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_53
    {
    	newLeafNode(otherlv_0, grammarAccess.getSVarDSSAccess().getTimeseriesKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_53
    {
    	newLeafNode(otherlv_1, grammarAccess.getSVarDSSAccess().getTIMESERIESKeyword_0_1());
    }
)(
(
		lv_bPart_2_0=RULE_STRING
		{
			newLeafNode(lv_bPart_2_0, grammarAccess.getSVarDSSAccess().getBPartSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSVarDSSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"bPart",
        		lv_bPart_2_0, 
        		"STRING");
	    }

)
)?(
	otherlv_3=KEYWORD_30
    {
    	newLeafNode(otherlv_3, grammarAccess.getSVarDSSAccess().getKindKeyword_2_0());
    }

    |
	otherlv_4=KEYWORD_30
    {
    	newLeafNode(otherlv_4, grammarAccess.getSVarDSSAccess().getKINDKeyword_2_1());
    }
)(
(
		lv_kind_5_0=RULE_STRING
		{
			newLeafNode(lv_kind_5_0, grammarAccess.getSVarDSSAccess().getKindSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSVarDSSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"kind",
        		lv_kind_5_0, 
        		"STRING");
	    }

)
)(
	otherlv_6=KEYWORD_36
    {
    	newLeafNode(otherlv_6, grammarAccess.getSVarDSSAccess().getUnitsKeyword_4_0());
    }

    |
	otherlv_7=KEYWORD_36
    {
    	newLeafNode(otherlv_7, grammarAccess.getSVarDSSAccess().getUNITSKeyword_4_1());
    }
)(
(
		lv_units_8_0=RULE_STRING
		{
			newLeafNode(lv_units_8_0, grammarAccess.getSVarDSSAccess().getUnitsSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSVarDSSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"units",
        		lv_units_8_0, 
        		"STRING");
	    }

)
)((
	otherlv_9=KEYWORD_42
    {
    	newLeafNode(otherlv_9, grammarAccess.getSVarDSSAccess().getConvertKeyword_6_0_0());
    }

    |
	otherlv_10=KEYWORD_42
    {
    	newLeafNode(otherlv_10, grammarAccess.getSVarDSSAccess().getCONVERTKeyword_6_0_1());
    }
)(
(
		lv_convert_11_0=RULE_STRING
		{
			newLeafNode(lv_convert_11_0, grammarAccess.getSVarDSSAccess().getConvertSTRINGTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSVarDSSRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"convert",
        		lv_convert_11_0, 
        		"STRING");
	    }

)
))?)
;





// Entry rule entryRuleSVarExpression
entryRuleSVarExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSVarExpressionRule()); }
	 iv_ruleSVarExpression=ruleSVarExpression 
	 { $current=$iv_ruleSVarExpression.current; } 
	 EOF 
;

// Rule SVarExpression
ruleSVarExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_38
    {
    	newLeafNode(otherlv_0, grammarAccess.getSVarExpressionAccess().getValueKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_38
    {
    	newLeafNode(otherlv_1, grammarAccess.getSVarExpressionAccess().getVALUEKeyword_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSVarExpressionAccess().getExpressionExpressionParserRuleCall_1_0()); 
	    }
		lv_expression_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSVarExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSVarSum
entryRuleSVarSum returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSVarSumRule()); }
	 iv_ruleSVarSum=ruleSVarSum 
	 { $current=$iv_ruleSVarSum.current; } 
	 EOF 
;

// Rule SVarSum
ruleSVarSum returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getSVarSumAccess().getSumContentSumContentParserRuleCall_0()); 
	    }
		lv_sumContent_0_0=ruleSumContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSVarSumRule());
	        }
       		set(
       			$current, 
       			"sumContent",
        		lv_sumContent_0_0, 
        		"SumContent");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleSVarTable
entryRuleSVarTable returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSVarTableRule()); }
	 iv_ruleSVarTable=ruleSVarTable 
	 { $current=$iv_ruleSVarTable.current; } 
	 EOF 
;

// Rule SVarTable
ruleSVarTable returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getSVarTableAccess().getTableContentTableContentParserRuleCall_0()); 
	    }
		lv_tableContent_0_0=ruleTableContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSVarTableRule());
	        }
       		set(
       			$current, 
       			"tableContent",
        		lv_tableContent_0_0, 
        		"TableContent");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleSVarCase
entryRuleSVarCase returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSVarCaseRule()); }
	 iv_ruleSVarCase=ruleSVarCase 
	 { $current=$iv_ruleSVarCase.current; } 
	 EOF 
;

// Rule SVarCase
ruleSVarCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getSVarCaseAccess().getCaseContentCaseContentParserRuleCall_0()); 
	    }
		lv_caseContent_0_0=ruleCaseContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSVarCaseRule());
	        }
       		add(
       			$current, 
       			"caseContent",
        		lv_caseContent_0_0, 
        		"CaseContent");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleCaseContent
entryRuleCaseContent returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getCaseContentRule()); }
	 iv_ruleCaseContent=ruleCaseContent 
	 { $current=$iv_ruleCaseContent.current; } 
	 EOF 
;

// Rule CaseContent
ruleCaseContent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_27
    {
    	newLeafNode(otherlv_0, grammarAccess.getCaseContentAccess().getCaseKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_27
    {
    	newLeafNode(otherlv_1, grammarAccess.getCaseContentAccess().getCASEKeyword_0_1());
    }
)(
(
		lv_caseName_2_0=RULE_ID
		{
			newLeafNode(lv_caseName_2_0, grammarAccess.getCaseContentAccess().getCaseNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCaseContentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"caseName",
        		lv_caseName_2_0, 
        		"ID");
	    }

)
)
	otherlv_3=KEYWORD_13
    {
    	newLeafNode(otherlv_3, grammarAccess.getCaseContentAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCaseContentAccess().getConditionConditionParserRuleCall_3_0()); 
	    }
		lv_condition_4_0=ruleCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseContentRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_4_0, 
        		"Condition");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getCaseContentAccess().getContentTableContentParserRuleCall_4_0_0()); 
	    }
		lv_content_5_0=ruleTableContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseContentRule());
	        }
       		set(
       			$current, 
       			"content",
        		lv_content_5_0, 
        		"TableContent");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCaseContentAccess().getContentValueContentParserRuleCall_4_1_0()); 
	    }
		lv_content_6_0=ruleValueContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseContentRule());
	        }
       		set(
       			$current, 
       			"content",
        		lv_content_6_0, 
        		"ValueContent");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCaseContentAccess().getContentSumContentParserRuleCall_4_2_0()); 
	    }
		lv_content_7_0=ruleSumContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseContentRule());
	        }
       		set(
       			$current, 
       			"content",
        		lv_content_7_0, 
        		"SumContent");
	        afterParserOrEnumRuleCall();
	    }

)
))
	otherlv_8=KEYWORD_14
    {
    	newLeafNode(otherlv_8, grammarAccess.getCaseContentAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleSumContent
entryRuleSumContent returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSumContentRule()); }
	 iv_ruleSumContent=ruleSumContent 
	 { $current=$iv_ruleSumContent.current; } 
	 EOF 
;

// Rule SumContent
ruleSumContent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_24
    {
    	newLeafNode(otherlv_0, grammarAccess.getSumContentAccess().getSumKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_24
    {
    	newLeafNode(otherlv_1, grammarAccess.getSumContentAccess().getSUMKeyword_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSumContentAccess().getHeaderSumHeaderParserRuleCall_1_0()); 
	    }
		lv_header_2_0=ruleSumHeader		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSumContentRule());
	        }
       		set(
       			$current, 
       			"header",
        		lv_header_2_0, 
        		"SumHeader");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSumContentAccess().getExpressionExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSumContentRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSumHeader
entryRuleSumHeader returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSumHeaderRule()); }
	 iv_ruleSumHeader=ruleSumHeader 
	 { $current=$iv_ruleSumHeader.current; } 
	 EOF 
;

// Rule SumHeader
ruleSumHeader returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=KEYWORD_1
    {
    	newLeafNode(otherlv_0, grammarAccess.getSumHeaderAccess().getLeftParenthesisKeyword_0());
    }

	otherlv_1=KEYWORD_19
    {
    	newLeafNode(otherlv_1, grammarAccess.getSumHeaderAccess().getIKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSumHeaderAccess().getExpression1ExpressionParserRuleCall_2_0()); 
	    }
		lv_expression1_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSumHeaderRule());
	        }
       		set(
       			$current, 
       			"expression1",
        		lv_expression1_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_3=KEYWORD_5
    {
    	newLeafNode(otherlv_3, grammarAccess.getSumHeaderAccess().getCommaKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSumHeaderAccess().getExpression2ExpressionParserRuleCall_4_0()); 
	    }
		lv_expression2_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSumHeaderRule());
	        }
       		set(
       			$current, 
       			"expression2",
        		lv_expression2_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_5=KEYWORD_5
    {
    	newLeafNode(otherlv_5, grammarAccess.getSumHeaderAccess().getCommaKeyword_5_0());
    }
(
	otherlv_6=KEYWORD_6
    {
    	newLeafNode(otherlv_6, grammarAccess.getSumHeaderAccess().getHyphenMinusKeyword_5_1());
    }
)?this_INT_7=RULE_INT
    { 
    newLeafNode(this_INT_7, grammarAccess.getSumHeaderAccess().getINTTerminalRuleCall_5_2()); 
    }
)?
	otherlv_8=KEYWORD_2
    {
    	newLeafNode(otherlv_8, grammarAccess.getSumHeaderAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleValueContent
entryRuleValueContent returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getValueContentRule()); }
	 iv_ruleValueContent=ruleValueContent 
	 { $current=$iv_ruleValueContent.current; } 
	 EOF 
;

// Rule ValueContent
ruleValueContent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_38
    {
    	newLeafNode(otherlv_0, grammarAccess.getValueContentAccess().getValueKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_38
    {
    	newLeafNode(otherlv_1, grammarAccess.getValueContentAccess().getVALUEKeyword_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getValueContentAccess().getExpressionExpressionParserRuleCall_1_0()); 
	    }
		lv_expression_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueContentRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTableContent
entryRuleTableContent returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getTableContentRule()); }
	 iv_ruleTableContent=ruleTableContent 
	 { $current=$iv_ruleTableContent.current; } 
	 EOF 
;

// Rule TableContent
ruleTableContent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_41
    {
    	newLeafNode(otherlv_0, grammarAccess.getTableContentAccess().getSelectKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_41
    {
    	newLeafNode(otherlv_1, grammarAccess.getTableContentAccess().getSELECTKeyword_0_1());
    }
)(
(
		lv_tableName_2_0=RULE_ID
		{
			newLeafNode(lv_tableName_2_0, grammarAccess.getTableContentAccess().getTableNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableContentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"tableName",
        		lv_tableName_2_0, 
        		"ID");
	    }

)
)(
	otherlv_3=KEYWORD_28
    {
    	newLeafNode(otherlv_3, grammarAccess.getTableContentAccess().getFromKeyword_2_0());
    }

    |
	otherlv_4=KEYWORD_28
    {
    	newLeafNode(otherlv_4, grammarAccess.getTableContentAccess().getFROMKeyword_2_1());
    }
)(
(
		lv_from_5_0=RULE_ID
		{
			newLeafNode(lv_from_5_0, grammarAccess.getTableContentAccess().getFromIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableContentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"from",
        		lv_from_5_0, 
        		"ID");
	    }

)
)((
	otherlv_6=KEYWORD_32
    {
    	newLeafNode(otherlv_6, grammarAccess.getTableContentAccess().getGivenKeyword_4_0_0());
    }

    |
	otherlv_7=KEYWORD_32
    {
    	newLeafNode(otherlv_7, grammarAccess.getTableContentAccess().getGIVENKeyword_4_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTableContentAccess().getGivenAssignmentParserRuleCall_4_1_0()); 
	    }
		lv_given_8_0=ruleAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableContentRule());
	        }
       		set(
       			$current, 
       			"given",
        		lv_given_8_0, 
        		"Assignment");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_9=KEYWORD_25
    {
    	newLeafNode(otherlv_9, grammarAccess.getTableContentAccess().getUseKeyword_4_2_0());
    }

    |
	otherlv_10=KEYWORD_25
    {
    	newLeafNode(otherlv_10, grammarAccess.getTableContentAccess().getUSEKeyword_4_2_1());
    }
)(
(
		lv_use_11_0=RULE_ID
		{
			newLeafNode(lv_use_11_0, grammarAccess.getTableContentAccess().getUseIDTerminalRuleCall_4_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTableContentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"use",
        		lv_use_11_0, 
        		"ID");
	    }

)
))?((
	otherlv_12=KEYWORD_39
    {
    	newLeafNode(otherlv_12, grammarAccess.getTableContentAccess().getWhereKeyword_5_0_0());
    }

    |
	otherlv_13=KEYWORD_39
    {
    	newLeafNode(otherlv_13, grammarAccess.getTableContentAccess().getWHEREKeyword_5_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTableContentAccess().getWhereWhereItemsParserRuleCall_5_1_0()); 
	    }
		lv_where_14_0=ruleWhereItems		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTableContentRule());
	        }
       		set(
       			$current, 
       			"where",
        		lv_where_14_0, 
        		"WhereItems");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleWhereItems
entryRuleWhereItems returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getWhereItemsRule()); }
	 iv_ruleWhereItems=ruleWhereItems 
	 { $current=$iv_ruleWhereItems.current; } 
	 EOF 
;

// Rule WhereItems
ruleWhereItems returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getWhereItemsAccess().getAssignmentAssignmentParserRuleCall_0_0()); 
	    }
		lv_assignment_0_0=ruleAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhereItemsRule());
	        }
       		add(
       			$current, 
       			"assignment",
        		lv_assignment_0_0, 
        		"Assignment");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_1=KEYWORD_5
    {
    	newLeafNode(otherlv_1, grammarAccess.getWhereItemsAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhereItemsAccess().getAssignmentAssignmentParserRuleCall_1_1_0()); 
	    }
		lv_assignment_2_0=ruleAssignment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhereItemsRule());
	        }
       		add(
       			$current, 
       			"assignment",
        		lv_assignment_2_0, 
        		"Assignment");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	 iv_ruleAssignment=ruleAssignment 
	 { $current=$iv_ruleAssignment.current; } 
	 EOF 
;

// Rule Assignment
ruleAssignment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentAccess().getTermTermSimpleParserRuleCall_0_0()); 
	    }
		lv_term_0_0=ruleTermSimple		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentRule());
	        }
       		set(
       			$current, 
       			"term",
        		lv_term_0_0, 
        		"TermSimple");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_1=KEYWORD_9
    {
    	newLeafNode(otherlv_1, grammarAccess.getAssignmentAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTermSimple
entryRuleTermSimple returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getTermSimpleRule()); }
	 iv_ruleTermSimple=ruleTermSimple 
	 { $current=$iv_ruleTermSimple.current; } 
	 EOF 
;

// Rule TermSimple
ruleTermSimple returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_ID_0=RULE_ID
    { 
    newLeafNode(this_ID_0, grammarAccess.getTermSimpleAccess().getIDTerminalRuleCall_0()); 
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTermSimpleAccess().getNumberParserRuleCall_1()); 
    }
ruleNumber
    {
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTermSimpleAccess().getFunctionParserRuleCall_2()); 
    }
    this_Function_2=ruleFunction
    {
        $current = $this_Function_2.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLowerAndOrUpper
entryRuleLowerAndOrUpper returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getLowerAndOrUpperRule()); }
	 iv_ruleLowerAndOrUpper=ruleLowerAndOrUpper 
	 { $current=$iv_ruleLowerAndOrUpper.current; } 
	 EOF 
;

// Rule LowerAndOrUpper
ruleLowerAndOrUpper returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getLowerAndOrUpperAccess().getLowerUpperParserRuleCall_0()); 
    }
    this_lowerUpper_0=rulelowerUpper
    {
        $current = $this_lowerUpper_0.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getLowerAndOrUpperAccess().getUpperLowerParserRuleCall_1()); 
    }
    this_upperLower_1=ruleupperLower
    {
        $current = $this_upperLower_1.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleupperLower
entryRuleupperLower returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getUpperLowerRule()); }
	 iv_ruleupperLower=ruleupperLower 
	 { $current=$iv_ruleupperLower.current; } 
	 EOF 
;

// Rule upperLower
ruleupperLower returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getUpperLowerAccess().getUpperUpperParserRuleCall_0_0()); 
	    }
		lv_upper_0_0=ruleUpper		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUpperLowerRule());
	        }
       		set(
       			$current, 
       			"upper",
        		lv_upper_0_0, 
        		"Upper");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUpperLowerAccess().getLowerLowerParserRuleCall_1_0()); 
	    }
		lv_lower_1_0=ruleLower		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUpperLowerRule());
	        }
       		set(
       			$current, 
       			"lower",
        		lv_lower_1_0, 
        		"Lower");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRulelowerUpper
entryRulelowerUpper returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getLowerUpperRule()); }
	 iv_rulelowerUpper=rulelowerUpper 
	 { $current=$iv_rulelowerUpper.current; } 
	 EOF 
;

// Rule lowerUpper
rulelowerUpper returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getLowerUpperAccess().getLowerLowerParserRuleCall_0_0()); 
	    }
		lv_lower_0_0=ruleLower		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLowerUpperRule());
	        }
       		set(
       			$current, 
       			"lower",
        		lv_lower_0_0, 
        		"Lower");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLowerUpperAccess().getUpperUpperParserRuleCall_1_0()); 
	    }
		lv_upper_1_0=ruleUpper		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLowerUpperRule());
	        }
       		set(
       			$current, 
       			"upper",
        		lv_upper_1_0, 
        		"Upper");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleUpper
entryRuleUpper returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getUpperRule()); }
	 iv_ruleUpper=ruleUpper 
	 { $current=$iv_ruleUpper.current; } 
	 EOF 
;

// Rule Upper
ruleUpper returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_37
    {
    	newLeafNode(otherlv_0, grammarAccess.getUpperAccess().getUpperKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_37
    {
    	newLeafNode(otherlv_1, grammarAccess.getUpperAccess().getUPPERKeyword_0_1());
    }
)(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getUpperAccess().getUpperAction_1_0_0(),
            $current);
    }
)(
	otherlv_3=KEYWORD_52
    {
    	newLeafNode(otherlv_3, grammarAccess.getUpperAccess().getUnboundedKeyword_1_0_1_0());
    }

    |
	otherlv_4=KEYWORD_52
    {
    	newLeafNode(otherlv_4, grammarAccess.getUpperAccess().getUNBOUNDEDKeyword_1_0_1_1());
    }
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getUpperAccess().getExpressionExpressionParserRuleCall_1_1_0()); 
	    }
		lv_expression_5_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUpperRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleLower
entryRuleLower returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getLowerRule()); }
	 iv_ruleLower=ruleLower 
	 { $current=$iv_ruleLower.current; } 
	 EOF 
;

// Rule Lower
ruleLower returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_34
    {
    	newLeafNode(otherlv_0, grammarAccess.getLowerAccess().getLowerKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_34
    {
    	newLeafNode(otherlv_1, grammarAccess.getLowerAccess().getLOWERKeyword_0_1());
    }
)(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getLowerAccess().getLowerAction_1_0_0(),
            $current);
    }
)(
	otherlv_3=KEYWORD_52
    {
    	newLeafNode(otherlv_3, grammarAccess.getLowerAccess().getUnboundedKeyword_1_0_1_0());
    }

    |
	otherlv_4=KEYWORD_52
    {
    	newLeafNode(otherlv_4, grammarAccess.getLowerAccess().getUNBOUNDEDKeyword_1_0_1_1());
    }
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLowerAccess().getExpressionExpressionParserRuleCall_1_1_0()); 
	    }
		lv_expression_5_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLowerRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleGoal
entryRuleGoal returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getGoalRule()); }
	 iv_ruleGoal=ruleGoal 
	 { $current=$iv_ruleGoal.current; } 
	 EOF 
;

// Rule Goal
ruleGoal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_29
    {
    	newLeafNode(otherlv_0, grammarAccess.getGoalAccess().getGoalKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_29
    {
    	newLeafNode(otherlv_1, grammarAccess.getGoalAccess().getGOALKeyword_0_1());
    }
)(
	otherlv_2=KEYWORD_11
    {
    	newLeafNode(otherlv_2, grammarAccess.getGoalAccess().getLeftSquareBracketKeyword_1_0());
    }
(
(
(
		lv_local_3_1=
	KEYWORD_33
    {
        newLeafNode(lv_local_3_1, grammarAccess.getGoalAccess().getLocalLocalKeyword_1_1_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
       		setWithLastConsumed($current, "local", true, null);
	    }

    |		lv_local_3_2=
	KEYWORD_33
    {
        newLeafNode(lv_local_3_2, grammarAccess.getGoalAccess().getLocalLOCALKeyword_1_1_0_1());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
       		setWithLastConsumed($current, "local", true, null);
	    }

)

)
)
	otherlv_4=KEYWORD_12
    {
    	newLeafNode(otherlv_4, grammarAccess.getGoalAccess().getRightSquareBracketKeyword_1_2());
    }
)?(
(
		lv_name_5_0=RULE_ID
		{
			newLeafNode(lv_name_5_0, grammarAccess.getGoalAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"ID");
	    }

)
)
	otherlv_6=KEYWORD_13
    {
    	newLeafNode(otherlv_6, grammarAccess.getGoalAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getDefinitionGoalSimpleParserRuleCall_4_0_0()); 
	    }
		lv_definition_7_1=ruleGoalSimple		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_7_1, 
        		"GoalSimple");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getGoalAccess().getDefinitionGoalCaseParserRuleCall_4_0_1()); 
	    }
		lv_definition_7_2=ruleGoalCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_7_2, 
        		"GoalCase");
	        afterParserOrEnumRuleCall();
	    }

)

)
)
	otherlv_8=KEYWORD_14
    {
    	newLeafNode(otherlv_8, grammarAccess.getGoalAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleGoalCase
entryRuleGoalCase returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getGoalCaseRule()); }
	 iv_ruleGoalCase=ruleGoalCase 
	 { $current=$iv_ruleGoalCase.current; } 
	 EOF 
;

// Rule GoalCase
ruleGoalCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_21
    {
    	newLeafNode(otherlv_0, grammarAccess.getGoalCaseAccess().getLhsKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_21
    {
    	newLeafNode(otherlv_1, grammarAccess.getGoalCaseAccess().getLHSKeyword_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalCaseAccess().getLhsExpressionParserRuleCall_1_0()); 
	    }
		lv_lhs_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalCaseRule());
	        }
       		set(
       			$current, 
       			"lhs",
        		lv_lhs_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getGoalCaseAccess().getContentGoalNoCaseContentParserRuleCall_2_0_0()); 
	    }
		lv_content_3_0=ruleGoalNoCaseContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalCaseRule());
	        }
       		set(
       			$current, 
       			"content",
        		lv_content_3_0, 
        		"GoalNoCaseContent");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalCaseAccess().getCaseContentGoalCaseContentParserRuleCall_2_1_0()); 
	    }
		lv_caseContent_4_0=ruleGoalCaseContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalCaseRule());
	        }
       		add(
       			$current, 
       			"caseContent",
        		lv_caseContent_4_0, 
        		"GoalCaseContent");
	        afterParserOrEnumRuleCall();
	    }

)
)+))
;





// Entry rule entryRuleGoalCaseContent
entryRuleGoalCaseContent returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getGoalCaseContentRule()); }
	 iv_ruleGoalCaseContent=ruleGoalCaseContent 
	 { $current=$iv_ruleGoalCaseContent.current; } 
	 EOF 
;

// Rule GoalCaseContent
ruleGoalCaseContent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_27
    {
    	newLeafNode(otherlv_0, grammarAccess.getGoalCaseContentAccess().getCaseKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_27
    {
    	newLeafNode(otherlv_1, grammarAccess.getGoalCaseContentAccess().getCASEKeyword_0_1());
    }
)(
(
		lv_caseName_2_0=RULE_ID
		{
			newLeafNode(lv_caseName_2_0, grammarAccess.getGoalCaseContentAccess().getCaseNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGoalCaseContentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"caseName",
        		lv_caseName_2_0, 
        		"ID");
	    }

)
)
	otherlv_3=KEYWORD_13
    {
    	newLeafNode(otherlv_3, grammarAccess.getGoalCaseContentAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalCaseContentAccess().getConditionConditionParserRuleCall_3_0()); 
	    }
		lv_condition_4_0=ruleCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalCaseContentRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_4_0, 
        		"Condition");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_5=KEYWORD_22
    {
    	newLeafNode(otherlv_5, grammarAccess.getGoalCaseContentAccess().getRhsKeyword_4_0());
    }

    |
	otherlv_6=KEYWORD_22
    {
    	newLeafNode(otherlv_6, grammarAccess.getGoalCaseContentAccess().getRHSKeyword_4_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalCaseContentAccess().getRhsExpressionParserRuleCall_5_0()); 
	    }
		lv_rhs_7_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalCaseContentRule());
	        }
       		set(
       			$current, 
       			"rhs",
        		lv_rhs_7_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalCaseContentAccess().getSubContentSubContentParserRuleCall_6_0()); 
	    }
		lv_subContent_8_0=ruleSubContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalCaseContentRule());
	        }
       		set(
       			$current, 
       			"subContent",
        		lv_subContent_8_0, 
        		"SubContent");
	        afterParserOrEnumRuleCall();
	    }

)
)?
	otherlv_9=KEYWORD_14
    {
    	newLeafNode(otherlv_9, grammarAccess.getGoalCaseContentAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleGoalNoCaseContent
entryRuleGoalNoCaseContent returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getGoalNoCaseContentRule()); }
	 iv_ruleGoalNoCaseContent=ruleGoalNoCaseContent 
	 { $current=$iv_ruleGoalNoCaseContent.current; } 
	 EOF 
;

// Rule GoalNoCaseContent
ruleGoalNoCaseContent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_22
    {
    	newLeafNode(otherlv_0, grammarAccess.getGoalNoCaseContentAccess().getRhsKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_22
    {
    	newLeafNode(otherlv_1, grammarAccess.getGoalNoCaseContentAccess().getRHSKeyword_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalNoCaseContentAccess().getRhsExpressionParserRuleCall_1_0()); 
	    }
		lv_rhs_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalNoCaseContentRule());
	        }
       		set(
       			$current, 
       			"rhs",
        		lv_rhs_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalNoCaseContentAccess().getSubContentSubContentParserRuleCall_2_0()); 
	    }
		lv_subContent_3_0=ruleSubContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalNoCaseContentRule());
	        }
       		set(
       			$current, 
       			"subContent",
        		lv_subContent_3_0, 
        		"SubContent");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleSubContent
entryRuleSubContent returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSubContentRule()); }
	 iv_ruleSubContent=ruleSubContent 
	 { $current=$iv_ruleSubContent.current; } 
	 EOF 
;

// Rule SubContent
ruleSubContent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getSubContentAccess().getGtLhsGtRhsParserRuleCall_0_0_0()); 
	    }
		lv_gt_0_0=ruleLhsGtRhs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubContentRule());
	        }
       		set(
       			$current, 
       			"gt",
        		lv_gt_0_0, 
        		"LhsGtRhs");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSubContentAccess().getLtLhsLtRhsParserRuleCall_0_1_0()); 
	    }
		lv_lt_1_0=ruleLhsLtRhs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubContentRule());
	        }
       		set(
       			$current, 
       			"lt",
        		lv_lt_1_0, 
        		"LhsLtRhs");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getSubContentAccess().getLtLhsLtRhsParserRuleCall_1_0_0()); 
	    }
		lv_lt_2_0=ruleLhsLtRhs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubContentRule());
	        }
       		set(
       			$current, 
       			"lt",
        		lv_lt_2_0, 
        		"LhsLtRhs");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSubContentAccess().getGtLhsGtRhsParserRuleCall_1_1_0()); 
	    }
		lv_gt_3_0=ruleLhsGtRhs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubContentRule());
	        }
       		set(
       			$current, 
       			"gt",
        		lv_gt_3_0, 
        		"LhsGtRhs");
	        afterParserOrEnumRuleCall();
	    }

)
)?))
;





// Entry rule entryRuleLhsGtRhs
entryRuleLhsGtRhs returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getLhsGtRhsRule()); }
	 iv_ruleLhsGtRhs=ruleLhsGtRhs 
	 { $current=$iv_ruleLhsGtRhs.current; } 
	 EOF 
;

// Rule LhsGtRhs
ruleLhsGtRhs returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_21
    {
    	newLeafNode(otherlv_0, grammarAccess.getLhsGtRhsAccess().getLhsKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_21
    {
    	newLeafNode(otherlv_1, grammarAccess.getLhsGtRhsAccess().getLHSKeyword_0_1());
    }
)
	otherlv_2=KEYWORD_10
    {
    	newLeafNode(otherlv_2, grammarAccess.getLhsGtRhsAccess().getGreaterThanSignKeyword_1());
    }
(
	otherlv_3=KEYWORD_22
    {
    	newLeafNode(otherlv_3, grammarAccess.getLhsGtRhsAccess().getRhsKeyword_2_0());
    }

    |
	otherlv_4=KEYWORD_22
    {
    	newLeafNode(otherlv_4, grammarAccess.getLhsGtRhsAccess().getRHSKeyword_2_1());
    }
)(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getLhsGtRhsAccess().getLhsGtRhsAction_3_0_0(),
            $current);
    }
)(
	otherlv_6=KEYWORD_50
    {
    	newLeafNode(otherlv_6, grammarAccess.getLhsGtRhsAccess().getConstrainKeyword_3_0_1_0());
    }

    |
	otherlv_7=KEYWORD_50
    {
    	newLeafNode(otherlv_7, grammarAccess.getLhsGtRhsAccess().getCONSTRAINKeyword_3_0_1_1());
    }
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLhsGtRhsAccess().getPenaltyPenaltyParserRuleCall_3_1_0()); 
	    }
		lv_penalty_8_0=rulePenalty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLhsGtRhsRule());
	        }
       		set(
       			$current, 
       			"penalty",
        		lv_penalty_8_0, 
        		"Penalty");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleLhsLtRhs
entryRuleLhsLtRhs returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getLhsLtRhsRule()); }
	 iv_ruleLhsLtRhs=ruleLhsLtRhs 
	 { $current=$iv_ruleLhsLtRhs.current; } 
	 EOF 
;

// Rule LhsLtRhs
ruleLhsLtRhs returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_21
    {
    	newLeafNode(otherlv_0, grammarAccess.getLhsLtRhsAccess().getLhsKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_21
    {
    	newLeafNode(otherlv_1, grammarAccess.getLhsLtRhsAccess().getLHSKeyword_0_1());
    }
)
	otherlv_2=KEYWORD_8
    {
    	newLeafNode(otherlv_2, grammarAccess.getLhsLtRhsAccess().getLessThanSignKeyword_1());
    }
(
	otherlv_3=KEYWORD_22
    {
    	newLeafNode(otherlv_3, grammarAccess.getLhsLtRhsAccess().getRhsKeyword_2_0());
    }

    |
	otherlv_4=KEYWORD_22
    {
    	newLeafNode(otherlv_4, grammarAccess.getLhsLtRhsAccess().getRHSKeyword_2_1());
    }
)(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getLhsLtRhsAccess().getLhsLtRhsAction_3_0_0(),
            $current);
    }
)(
	otherlv_6=KEYWORD_50
    {
    	newLeafNode(otherlv_6, grammarAccess.getLhsLtRhsAccess().getConstrainKeyword_3_0_1_0());
    }

    |
	otherlv_7=KEYWORD_50
    {
    	newLeafNode(otherlv_7, grammarAccess.getLhsLtRhsAccess().getCONSTRAINKeyword_3_0_1_1());
    }
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLhsLtRhsAccess().getPenaltyPenaltyParserRuleCall_3_1_0()); 
	    }
		lv_penalty_8_0=rulePenalty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLhsLtRhsRule());
	        }
       		set(
       			$current, 
       			"penalty",
        		lv_penalty_8_0, 
        		"Penalty");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRulePenalty
entryRulePenalty returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getPenaltyRule()); }
	 iv_rulePenalty=rulePenalty 
	 { $current=$iv_rulePenalty.current; } 
	 EOF 
;

// Rule Penalty
rulePenalty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_46
    {
    	newLeafNode(otherlv_0, grammarAccess.getPenaltyAccess().getPenaltyKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_46
    {
    	newLeafNode(otherlv_1, grammarAccess.getPenaltyAccess().getPENALTYKeyword_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPenaltyAccess().getExpressionExpressionParserRuleCall_1_0()); 
	    }
		lv_expression_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPenaltyRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleGoalSimple
entryRuleGoalSimple returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getGoalSimpleRule()); }
	 iv_ruleGoalSimple=ruleGoalSimple 
	 { $current=$iv_ruleGoalSimple.current; } 
	 EOF 
;

// Rule GoalSimple
ruleGoalSimple returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getGoalSimpleAccess().getConstraintConstraintParserRuleCall_0()); 
	    }
		lv_constraint_0_0=ruleConstraint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGoalSimpleRule());
	        }
       		set(
       			$current, 
       			"constraint",
        		lv_constraint_0_0, 
        		"Constraint");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleConstraint
entryRuleConstraint returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getConstraintRule()); }
	 iv_ruleConstraint=ruleConstraint 
	 { $current=$iv_ruleConstraint.current; } 
	 EOF 
;

// Rule Constraint
ruleConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getConstraintAccess().getLhsExpressionParserRuleCall_0_0()); 
	    }
		lv_lhs_0_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstraintRule());
	        }
       		set(
       			$current, 
       			"lhs",
        		lv_lhs_0_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
(
		lv_operator_1_1=
	KEYWORD_8
    {
        newLeafNode(lv_operator_1_1, grammarAccess.getConstraintAccess().getOperatorLessThanSignKeyword_1_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstraintRule());
	        }
       		setWithLastConsumed($current, "operator", lv_operator_1_1, null);
	    }

    |		lv_operator_1_2=
	KEYWORD_10
    {
        newLeafNode(lv_operator_1_2, grammarAccess.getConstraintAccess().getOperatorGreaterThanSignKeyword_1_0_1());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstraintRule());
	        }
       		setWithLastConsumed($current, "operator", lv_operator_1_2, null);
	    }

    |		lv_operator_1_3=
	KEYWORD_9
    {
        newLeafNode(lv_operator_1_3, grammarAccess.getConstraintAccess().getOperatorEqualsSignKeyword_1_0_2());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstraintRule());
	        }
       		setWithLastConsumed($current, "operator", lv_operator_1_3, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConstraintAccess().getRhsExpressionParserRuleCall_2_0()); 
	    }
		lv_rhs_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstraintRule());
	        }
       		set(
       			$current, 
       			"rhs",
        		lv_rhs_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_35
    {
    	newLeafNode(otherlv_0, grammarAccess.getModelAccess().getModelKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_35
    {
    	newLeafNode(otherlv_1, grammarAccess.getModelAccess().getMODELKeyword_0_1());
    }
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)
	otherlv_3=KEYWORD_13
    {
    	newLeafNode(otherlv_3, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getPatternPatternParserRuleCall_3_0_0()); 
	    }
		lv_pattern_4_0=rulePattern		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"pattern",
        		lv_pattern_4_0, 
        		"Pattern");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getAliasAliasParserRuleCall_3_1_0()); 
	    }
		lv_alias_5_0=ruleAlias		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"alias",
        		lv_alias_5_0, 
        		"Alias");
	        afterParserOrEnumRuleCall();
	    }

)
))+
	otherlv_6=KEYWORD_14
    {
    	newLeafNode(otherlv_6, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleInitial
entryRuleInitial returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getInitialRule()); }
	 iv_ruleInitial=ruleInitial 
	 { $current=$iv_ruleInitial.current; } 
	 EOF 
;

// Rule Initial
ruleInitial returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_44
    {
    	newLeafNode(otherlv_0, grammarAccess.getInitialAccess().getInitialKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_44
    {
    	newLeafNode(otherlv_1, grammarAccess.getInitialAccess().getInitialKeyword_0_1());
    }

    |
	otherlv_2=KEYWORD_44
    {
    	newLeafNode(otherlv_2, grammarAccess.getInitialAccess().getINITIALKeyword_0_2());
    }
)
	otherlv_3=KEYWORD_13
    {
    	newLeafNode(otherlv_3, grammarAccess.getInitialAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInitialAccess().getPatternPatternParserRuleCall_2_0()); 
	    }
		lv_pattern_4_0=rulePattern		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitialRule());
	        }
       		add(
       			$current, 
       			"pattern",
        		lv_pattern_4_0, 
        		"Pattern");
	        afterParserOrEnumRuleCall();
	    }

)
)+
	otherlv_5=KEYWORD_14
    {
    	newLeafNode(otherlv_5, grammarAccess.getInitialAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleSequence
entryRuleSequence returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSequenceRule()); }
	 iv_ruleSequence=ruleSequence 
	 { $current=$iv_ruleSequence.current; } 
	 EOF 
;

// Rule Sequence
ruleSequence returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_48
    {
    	newLeafNode(otherlv_0, grammarAccess.getSequenceAccess().getSequenceKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_48
    {
    	newLeafNode(otherlv_1, grammarAccess.getSequenceAccess().getSEQUENCEKeyword_0_1());
    }
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getSequenceAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSequenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)
	otherlv_3=KEYWORD_13
    {
    	newLeafNode(otherlv_3, grammarAccess.getSequenceAccess().getLeftCurlyBracketKeyword_2());
    }
(
	otherlv_4=KEYWORD_35
    {
    	newLeafNode(otherlv_4, grammarAccess.getSequenceAccess().getModelKeyword_3_0());
    }

    |
	otherlv_5=KEYWORD_35
    {
    	newLeafNode(otherlv_5, grammarAccess.getSequenceAccess().getMODELKeyword_3_1());
    }
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSequenceRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getSequenceAccess().getModelModelCrossReference_4_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceAccess().getConditionConditionParserRuleCall_5_0()); 
	    }
		lv_condition_7_0=ruleCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_7_0, 
        		"Condition");
	        afterParserOrEnumRuleCall();
	    }

)
)?(this_ORDER_8=RULE_ORDER
    { 
    newLeafNode(this_ORDER_8, grammarAccess.getSequenceAccess().getORDERTerminalRuleCall_6_0()); 
    }
(
(
		lv_order_9_0=RULE_INT
		{
			newLeafNode(lv_order_9_0, grammarAccess.getSequenceAccess().getOrderINTTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSequenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"order",
        		lv_order_9_0, 
        		"INT");
	    }

)
))?
	otherlv_10=KEYWORD_14
    {
    	newLeafNode(otherlv_10, grammarAccess.getSequenceAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	 iv_ruleCondition=ruleCondition 
	 { $current=$iv_ruleCondition.current; } 
	 EOF 
;

// Rule Condition
ruleCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_49
    {
    	newLeafNode(otherlv_0, grammarAccess.getConditionAccess().getConditionKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_49
    {
    	newLeafNode(otherlv_1, grammarAccess.getConditionAccess().getCONDITIONKeyword_0_1());
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getConditionAccess().getLogicalLogicalExpressionParserRuleCall_1_0_0()); 
	    }
		lv_logical_2_0=ruleLogicalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionRule());
	        }
       		set(
       			$current, 
       			"logical",
        		lv_logical_2_0, 
        		"LogicalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getConditionAccess().getConditionAction_1_1_0(),
            $current);
    }
)this_ALWAYS_4=RULE_ALWAYS
    { 
    newLeafNode(this_ALWAYS_4, grammarAccess.getConditionAccess().getALWAYSTerminalRuleCall_1_1_1()); 
    }
)))
;





// Entry rule entryRuleLogicalExpression
entryRuleLogicalExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getLogicalExpressionRule()); }
	 iv_ruleLogicalExpression=ruleLogicalExpression 
	 { $current=$iv_ruleLogicalExpression.current; } 
	 EOF 
;

// Rule LogicalExpression
ruleLogicalExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getLogicalExpressionAccess().getC1ConditionalUnaryParserRuleCall_0_0()); 
	    }
		lv_c1_0_0=ruleConditionalUnary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicalExpressionRule());
	        }
       		set(
       			$current, 
       			"c1",
        		lv_c1_0_0, 
        		"ConditionalUnary");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getLogicalExpressionAccess().getBinaryOpParserRuleCall_1_0()); 
    }
ruleBinaryOp
    {
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicalExpressionAccess().getC2ConditionalUnaryParserRuleCall_1_1_0()); 
	    }
		lv_c2_2_0=ruleConditionalUnary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicalExpressionRule());
	        }
       		add(
       			$current, 
       			"c2",
        		lv_c2_2_0, 
        		"ConditionalUnary");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleBinaryOp
entryRuleBinaryOp returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getBinaryOpRule()); } 
	 iv_ruleBinaryOp=ruleBinaryOp 
	 { $current=$iv_ruleBinaryOp.current.getText(); }  
	 EOF 
;

// Rule BinaryOp
ruleBinaryOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(    this_OR_0=RULE_OR    {
		$current.merge(this_OR_0);
    }

    { 
    newLeafNode(this_OR_0, grammarAccess.getBinaryOpAccess().getORTerminalRuleCall_0()); 
    }

    |    this_AND_1=RULE_AND    {
		$current.merge(this_AND_1);
    }

    { 
    newLeafNode(this_AND_1, grammarAccess.getBinaryOpAccess().getANDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleConditionalUnary
entryRuleConditionalUnary returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getConditionalUnaryRule()); }
	 iv_ruleConditionalUnary=ruleConditionalUnary 
	 { $current=$iv_ruleConditionalUnary.current; } 
	 EOF 
;

// Rule ConditionalUnary
ruleConditionalUnary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConditionalUnaryAccess().getConditionalNegationParserRuleCall_0()); 
    }
ruleConditionalNegation
    {
        afterParserOrEnumRuleCall();
    }
)?
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConditionalUnaryAccess().getConditionalTermParserRuleCall_1()); 
    }
    this_ConditionalTerm_1=ruleConditionalTerm
    {
        $current = $this_ConditionalTerm_1.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleConditionalNegation
entryRuleConditionalNegation returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getConditionalNegationRule()); } 
	 iv_ruleConditionalNegation=ruleConditionalNegation 
	 { $current=$iv_ruleConditionalNegation.current.getText(); }  
	 EOF 
;

// Rule ConditionalNegation
ruleConditionalNegation returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
    this_NOT_0=RULE_NOT    {
		$current.merge(this_NOT_0);
    }

    { 
    newLeafNode(this_NOT_0, grammarAccess.getConditionalNegationAccess().getNOTTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleConditionalTerm
entryRuleConditionalTerm returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getConditionalTermRule()); }
	 iv_ruleConditionalTerm=ruleConditionalTerm 
	 { $current=$iv_ruleConditionalTerm.current; } 
	 EOF 
;

// Rule ConditionalTerm
ruleConditionalTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalTermAccess().getE1ExpressionParserRuleCall_0_0_0()); 
	    }
		lv_e1_0_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalTermRule());
	        }
       		set(
       			$current, 
       			"e1",
        		lv_e1_0_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConditionalTermAccess().getRelationParserRuleCall_0_1()); 
    }
ruleRelation
    {
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalTermAccess().getE2ExpressionParserRuleCall_0_2_0()); 
	    }
		lv_e2_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalTermRule());
	        }
       		set(
       			$current, 
       			"e2",
        		lv_e2_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConditionalTermAccess().getLogicalFunctionParserRuleCall_1()); 
    }
ruleLogicalFunction
    {
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRelation
entryRuleRelation returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getRelationRule()); } 
	 iv_ruleRelation=ruleRelation 
	 { $current=$iv_ruleRelation.current.getText(); }  
	 EOF 
;

// Rule Relation
ruleRelation returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
	kw=KEYWORD_10 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelationAccess().getGreaterThanSignKeyword_0()); 
    }

    |
	kw=KEYWORD_8 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelationAccess().getLessThanSignKeyword_1()); 
    }

    |
	kw=KEYWORD_18 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelationAccess().getGreaterThanSignEqualsSignKeyword_2()); 
    }

    |
	kw=KEYWORD_16 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelationAccess().getLessThanSignEqualsSignKeyword_3()); 
    }

    |
	kw=KEYWORD_17 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelationAccess().getEqualsSignEqualsSignKeyword_4()); 
    }

    |
	kw=KEYWORD_15 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelationAccess().getSolidusEqualsSignKeyword_5()); 
    }
)
    ;





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getAddParserRuleCall()); 
    }
    this_Add_0=ruleAdd
    {
        $current = $this_Add_0.current;
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleAdd
entryRuleAdd returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getAddRule()); }
	 iv_ruleAdd=ruleAdd 
	 { $current=$iv_ruleAdd.current; } 
	 EOF 
;

// Rule Add
ruleAdd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAddAccess().getM1MultiplyParserRuleCall_0_0()); 
	    }
		lv_m1_0_0=ruleMultiply		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAddRule());
	        }
       		set(
       			$current, 
       			"m1",
        		lv_m1_0_0, 
        		"Multiply");
	        afterParserOrEnumRuleCall();
	    }

)
)((
	otherlv_1=KEYWORD_4
    {
    	newLeafNode(otherlv_1, grammarAccess.getAddAccess().getPlusSignKeyword_1_0_0());
    }

    |
	otherlv_2=KEYWORD_6
    {
    	newLeafNode(otherlv_2, grammarAccess.getAddAccess().getHyphenMinusKeyword_1_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAddAccess().getM2MultiplyParserRuleCall_1_1_0()); 
	    }
		lv_m2_3_0=ruleMultiply		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAddRule());
	        }
       		add(
       			$current, 
       			"m2",
        		lv_m2_3_0, 
        		"Multiply");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleMultiply
entryRuleMultiply returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getMultiplyRule()); }
	 iv_ruleMultiply=ruleMultiply 
	 { $current=$iv_ruleMultiply.current; } 
	 EOF 
;

// Rule Multiply
ruleMultiply returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplyAccess().getU1UnaryParserRuleCall_0_0()); 
	    }
		lv_u1_0_0=ruleUnary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplyRule());
	        }
       		set(
       			$current, 
       			"u1",
        		lv_u1_0_0, 
        		"Unary");
	        afterParserOrEnumRuleCall();
	    }

)
)((
	otherlv_1=KEYWORD_3
    {
    	newLeafNode(otherlv_1, grammarAccess.getMultiplyAccess().getAsteriskKeyword_1_0_0());
    }

    |
	otherlv_2=KEYWORD_7
    {
    	newLeafNode(otherlv_2, grammarAccess.getMultiplyAccess().getSolidusKeyword_1_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplyAccess().getU2UnaryParserRuleCall_1_1_0()); 
	    }
		lv_u2_3_0=ruleUnary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplyRule());
	        }
       		add(
       			$current, 
       			"u2",
        		lv_u2_3_0, 
        		"Unary");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUnary
entryRuleUnary returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getUnaryRule()); }
	 iv_ruleUnary=ruleUnary 
	 { $current=$iv_ruleUnary.current; } 
	 EOF 
;

// Rule Unary
ruleUnary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_4
    {
    	newLeafNode(otherlv_0, grammarAccess.getUnaryAccess().getPlusSignKeyword_0_0());
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getUnaryAccess().getNegationParserRuleCall_0_1()); 
    }
ruleNegation
    {
        afterParserOrEnumRuleCall();
    }
)?
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getUnaryAccess().getTermParserRuleCall_1()); 
    }
    this_Term_2=ruleTerm
    {
        $current = $this_Term_2.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNegation
entryRuleNegation returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getNegationRule()); } 
	 iv_ruleNegation=ruleNegation 
	 { $current=$iv_ruleNegation.current.getText(); }  
	 EOF 
;

// Rule Negation
ruleNegation returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:

	kw=KEYWORD_6 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNegationAccess().getHyphenMinusKeyword()); 
    }

    ;





// Entry rule entryRuleTerm
entryRuleTerm returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getTermRule()); }
	 iv_ruleTerm=ruleTerm 
	 { $current=$iv_ruleTerm.current; } 
	 EOF 
;

// Rule Term
ruleTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTermAccess().getIIdentParserRuleCall_0_0()); 
	    }
		lv_i_0_0=ruleIdent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermRule());
	        }
       		set(
       			$current, 
       			"i",
        		lv_i_0_0, 
        		"Ident");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTermAccess().getNNumberParserRuleCall_1_0()); 
	    }
		lv_n_1_0=ruleNumber		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermRule());
	        }
       		set(
       			$current, 
       			"n",
        		lv_n_1_0, 
        		"Number");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTermAccess().getFFunctionParserRuleCall_2_0()); 
	    }
		lv_f_2_0=ruleFunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermRule());
	        }
       		set(
       			$current, 
       			"f",
        		lv_f_2_0, 
        		"Function");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
	otherlv_3=KEYWORD_1
    {
    	newLeafNode(otherlv_3, grammarAccess.getTermAccess().getLeftParenthesisKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTermAccess().getE2ExpressionParserRuleCall_3_1_0()); 
	    }
		lv_e2_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermRule());
	        }
       		set(
       			$current, 
       			"e2",
        		lv_e2_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_5=KEYWORD_2
    {
    	newLeafNode(otherlv_5, grammarAccess.getTermAccess().getRightParenthesisKeyword_3_2());
    }
))
;





// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	 iv_ruleFunction=ruleFunction 
	 { $current=$iv_ruleFunction.current; } 
	 EOF 
;

// Rule Function
ruleFunction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFunctionAccess().getExternalFunctionParserRuleCall_0()); 
    }
    this_ExternalFunction_0=ruleExternalFunction
    {
        $current = $this_ExternalFunction_0.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFunctionAccess().getMaxFunctionParserRuleCall_1()); 
    }
    this_MaxFunction_1=ruleMaxFunction
    {
        $current = $this_MaxFunction_1.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFunctionAccess().getMinFunctionParserRuleCall_2()); 
    }
    this_MinFunction_2=ruleMinFunction
    {
        $current = $this_MinFunction_2.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFunctionAccess().getIntFunctionParserRuleCall_3()); 
    }
    this_IntFunction_3=ruleIntFunction
    {
        $current = $this_IntFunction_3.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFunctionAccess().getVarModelParserRuleCall_4()); 
    }
ruleVarModel
    {
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleExternalFunction
entryRuleExternalFunction returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getExternalFunctionRule()); }
	 iv_ruleExternalFunction=ruleExternalFunction 
	 { $current=$iv_ruleExternalFunction.current; } 
	 EOF 
;

// Rule ExternalFunction
ruleExternalFunction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_ID_0=RULE_ID
    { 
    newLeafNode(this_ID_0, grammarAccess.getExternalFunctionAccess().getIDTerminalRuleCall_0()); 
    }

	otherlv_1=KEYWORD_1
    {
    	newLeafNode(otherlv_1, grammarAccess.getExternalFunctionAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExternalFunctionAccess().getE1ExpressionParserRuleCall_2_0()); 
	    }
		lv_e1_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExternalFunctionRule());
	        }
       		set(
       			$current, 
       			"e1",
        		lv_e1_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_3=KEYWORD_5
    {
    	newLeafNode(otherlv_3, grammarAccess.getExternalFunctionAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExternalFunctionAccess().getE2ExpressionParserRuleCall_3_1_0()); 
	    }
		lv_e2_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExternalFunctionRule());
	        }
       		add(
       			$current, 
       			"e2",
        		lv_e2_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_5=KEYWORD_2
    {
    	newLeafNode(otherlv_5, grammarAccess.getExternalFunctionAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleMaxFunction
entryRuleMaxFunction returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getMaxFunctionRule()); }
	 iv_ruleMaxFunction=ruleMaxFunction 
	 { $current=$iv_ruleMaxFunction.current; } 
	 EOF 
;

// Rule MaxFunction
ruleMaxFunction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_MAX_0=RULE_MAX
    { 
    newLeafNode(this_MAX_0, grammarAccess.getMaxFunctionAccess().getMAXTerminalRuleCall_0()); 
    }

	otherlv_1=KEYWORD_1
    {
    	newLeafNode(otherlv_1, grammarAccess.getMaxFunctionAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMaxFunctionAccess().getE1ExpressionParserRuleCall_2_0()); 
	    }
		lv_e1_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMaxFunctionRule());
	        }
       		set(
       			$current, 
       			"e1",
        		lv_e1_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_3=KEYWORD_5
    {
    	newLeafNode(otherlv_3, grammarAccess.getMaxFunctionAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMaxFunctionAccess().getE2ExpressionParserRuleCall_3_1_0()); 
	    }
		lv_e2_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMaxFunctionRule());
	        }
       		add(
       			$current, 
       			"e2",
        		lv_e2_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_5=KEYWORD_2
    {
    	newLeafNode(otherlv_5, grammarAccess.getMaxFunctionAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleMinFunction
entryRuleMinFunction returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getMinFunctionRule()); }
	 iv_ruleMinFunction=ruleMinFunction 
	 { $current=$iv_ruleMinFunction.current; } 
	 EOF 
;

// Rule MinFunction
ruleMinFunction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_MIN_0=RULE_MIN
    { 
    newLeafNode(this_MIN_0, grammarAccess.getMinFunctionAccess().getMINTerminalRuleCall_0()); 
    }

	otherlv_1=KEYWORD_1
    {
    	newLeafNode(otherlv_1, grammarAccess.getMinFunctionAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMinFunctionAccess().getE1ExpressionParserRuleCall_2_0()); 
	    }
		lv_e1_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMinFunctionRule());
	        }
       		set(
       			$current, 
       			"e1",
        		lv_e1_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_3=KEYWORD_5
    {
    	newLeafNode(otherlv_3, grammarAccess.getMinFunctionAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMinFunctionAccess().getE2ExpressionParserRuleCall_3_1_0()); 
	    }
		lv_e2_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMinFunctionRule());
	        }
       		add(
       			$current, 
       			"e2",
        		lv_e2_4_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*
	otherlv_5=KEYWORD_2
    {
    	newLeafNode(otherlv_5, grammarAccess.getMinFunctionAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleIntFunction
entryRuleIntFunction returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getIntFunctionRule()); }
	 iv_ruleIntFunction=ruleIntFunction 
	 { $current=$iv_ruleIntFunction.current; } 
	 EOF 
;

// Rule IntFunction
ruleIntFunction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_INT_0=RULE_INT
    { 
    newLeafNode(this_INT_0, grammarAccess.getIntFunctionAccess().getINTTerminalRuleCall_0()); 
    }

	otherlv_1=KEYWORD_1
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntFunctionAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntFunctionAccess().getEExpressionParserRuleCall_2_0()); 
	    }
		lv_e_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntFunctionRule());
	        }
       		set(
       			$current, 
       			"e",
        		lv_e_2_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_3=KEYWORD_2
    {
    	newLeafNode(otherlv_3, grammarAccess.getIntFunctionAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleLogicalFunction
entryRuleLogicalFunction returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getLogicalFunctionRule()); } 
	 iv_ruleLogicalFunction=ruleLogicalFunction 
	 { $current=$iv_ruleLogicalFunction.current.getText(); }  
	 EOF 
;

// Rule LogicalFunction
ruleLogicalFunction returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:

    { 
        newCompositeNode(grammarAccess.getLogicalFunctionAccess().getRangeFunctionParserRuleCall()); 
    }
    this_RangeFunction_0=ruleRangeFunction    {
		$current.merge(this_RangeFunction_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    ;





// Entry rule entryRuleVarModel
entryRuleVarModel returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getVarModelRule()); } 
	 iv_ruleVarModel=ruleVarModel 
	 { $current=$iv_ruleVarModel.current.getText(); }  
	 EOF 
;

// Rule VarModel
ruleVarModel returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getVarModelAccess().getIDTerminalRuleCall_0()); 
    }

	kw=KEYWORD_11 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVarModelAccess().getLeftSquareBracketKeyword_1()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getVarModelAccess().getIDTerminalRuleCall_2()); 
    }

	kw=KEYWORD_12 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVarModelAccess().getRightSquareBracketKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleRangeFunction
entryRuleRangeFunction returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getRangeFunctionRule()); } 
	 iv_ruleRangeFunction=ruleRangeFunction 
	 { $current=$iv_ruleRangeFunction.current.getText(); }  
	 EOF 
;

// Rule RangeFunction
ruleRangeFunction returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(    this_RANGE_0=RULE_RANGE    {
		$current.merge(this_RANGE_0);
    }

    { 
    newLeafNode(this_RANGE_0, grammarAccess.getRangeFunctionAccess().getRANGETerminalRuleCall_0()); 
    }

	kw=KEYWORD_1 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRangeFunctionAccess().getLeftParenthesisKeyword_1()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getRangeFunctionAccess().getIDTerminalRuleCall_2()); 
    }

	kw=KEYWORD_5 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRangeFunctionAccess().getCommaKeyword_3()); 
    }
    this_ID_4=RULE_ID    {
		$current.merge(this_ID_4);
    }

    { 
    newLeafNode(this_ID_4, grammarAccess.getRangeFunctionAccess().getIDTerminalRuleCall_4()); 
    }

	kw=KEYWORD_5 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRangeFunctionAccess().getCommaKeyword_5()); 
    }
    this_ID_6=RULE_ID    {
		$current.merge(this_ID_6);
    }

    { 
    newLeafNode(this_ID_6, grammarAccess.getRangeFunctionAccess().getIDTerminalRuleCall_6()); 
    }

	kw=KEYWORD_2 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRangeFunctionAccess().getRightParenthesisKeyword_7()); 
    }
)
    ;





// Entry rule entryRuleIdent
entryRuleIdent returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getIdentRule()); }
	 iv_ruleIdent=ruleIdent 
	 { $current=$iv_ruleIdent.current; } 
	 EOF 
;

// Rule Ident
ruleIdent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getIdentAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIdentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleNumber
entryRuleNumber returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getNumberRule()); } 
	 iv_ruleNumber=ruleNumber 
	 { $current=$iv_ruleNumber.current.getText(); }  
	 EOF 
;

// Rule Number
ruleNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getNumberAccess().getINTTerminalRuleCall_0()); 
    }

    |    this_FLOAT_1=RULE_FLOAT    {
		$current.merge(this_FLOAT_1);
    }

    { 
    newLeafNode(this_FLOAT_1, grammarAccess.getNumberAccess().getFLOATTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleIncludeFile
entryRuleIncludeFile returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getIncludeFileRule()); }
	 iv_ruleIncludeFile=ruleIncludeFile 
	 { $current=$iv_ruleIncludeFile.current; } 
	 EOF 
;

// Rule IncludeFile
ruleIncludeFile returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	otherlv_0=KEYWORD_43
    {
    	newLeafNode(otherlv_0, grammarAccess.getIncludeFileAccess().getIncludeKeyword_0_0());
    }

    |
	otherlv_1=KEYWORD_43
    {
    	newLeafNode(otherlv_1, grammarAccess.getIncludeFileAccess().getINCLUDEKeyword_0_1());
    }
)(
	otherlv_2=KEYWORD_11
    {
    	newLeafNode(otherlv_2, grammarAccess.getIncludeFileAccess().getLeftSquareBracketKeyword_1_0());
    }
(
(
(
		lv_local_3_1=
	KEYWORD_33
    {
        newLeafNode(lv_local_3_1, grammarAccess.getIncludeFileAccess().getLocalLocalKeyword_1_1_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIncludeFileRule());
	        }
       		setWithLastConsumed($current, "local", true, null);
	    }

    |		lv_local_3_2=
	KEYWORD_33
    {
        newLeafNode(lv_local_3_2, grammarAccess.getIncludeFileAccess().getLocalLOCALKeyword_1_1_0_1());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIncludeFileRule());
	        }
       		setWithLastConsumed($current, "local", true, null);
	    }

)

)
)
	otherlv_4=KEYWORD_12
    {
    	newLeafNode(otherlv_4, grammarAccess.getIncludeFileAccess().getRightSquareBracketKeyword_1_2());
    }
)?(
(
		lv_file_5_0=RULE_STRING
		{
			newLeafNode(lv_file_5_0, grammarAccess.getIncludeFileAccess().getFileSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIncludeFileRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"file",
        		lv_file_5_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleIncludeModel
entryRuleIncludeModel returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getIncludeModelRule()); } 
	 iv_ruleIncludeModel=ruleIncludeModel 
	 { $current=$iv_ruleIncludeModel.current.getText(); }  
	 EOF 
;

// Rule IncludeModel
ruleIncludeModel returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
((
	kw=KEYWORD_43 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIncludeModelAccess().getIncludeKeyword_0_0()); 
    }

    |
	kw=KEYWORD_43 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIncludeModelAccess().getINCLUDEKeyword_0_1()); 
    }
)(
	kw=KEYWORD_35 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIncludeModelAccess().getModelKeyword_1_0()); 
    }

    |
	kw=KEYWORD_35 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIncludeModelAccess().getMODELKeyword_1_1()); 
    }
)    this_ID_4=RULE_ID    {
		$current.merge(this_ID_4);
    }

    { 
    newLeafNode(this_ID_4, grammarAccess.getIncludeModelAccess().getIDTerminalRuleCall_2()); 
    }
)
    ;





