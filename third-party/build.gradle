import java.util.jar.JarFile

plugins{
    id 'library.deps-conventions'
    id 'library.java-conventions'

    // The following plugin is used to build the OSGI bundle
    id 'biz.aQute.bnd.builder' version '6.4.0'
}

jar {
    archiveBaseName.set('third-party')
    archiveVersion.set('1.0.0.0')
    archiveFileName.set("${archiveBaseName.get()}_${archiveVersion.get()}.jar")
}


dependencies {
    implementation libs.commons.io
    implementation libs.jfreechart
    implementation libs.hec.monolith
    implementation libs.hec.nucleus.metadata
    implementation libs.osgi.core
    implementation libs.osgi.compendium

    implementation fileTree(dir: 'libs/x64', include: ['*.jar'])
}

configurations.configureEach {
    exclude group: "javax.media", module: "jai_core"
    exclude group: "javax.media", module: "jai_codec"
    exclude group: "com.sun.media", module: "jai_imageio"
}

tasks.register('copyDependencies', Copy) {
    from(configurations.runtimeClasspath)
    into 'build/tmp/libs'
}

jar.dependsOn(copyDependencies)

tasks.register('updateExportContents') {
    def bndFile = file('bnd.bnd')
    def libsDir = file('build/tmp/libs')
    def packageSet = new LinkedHashSet<String>()

    doLast {
        libsDir.eachFileRecurse { file ->
            if (file.name.endsWith('.jar')) {
                JarFile jar = new JarFile(file)
                jar.entries().each { entry ->
                    if (entry.name.endsWith('.class')) {
                        def packageName = entry.name.replaceAll('/[^/]+$', '').replace('/', '.')
                        packageSet.add(packageName)
                    }
                }
            }
        }

        def exportContents = packageSet.collect { it + ',\\' }.join('\n    ')
        def bndContent = bndFile.text.replaceAll(/-Export-Package: .*/, "-Export-Package: \\\n    ${exportContents}")
        bndFile.text = bndContent
    }
}

jar.dependsOn(updateExportContents)